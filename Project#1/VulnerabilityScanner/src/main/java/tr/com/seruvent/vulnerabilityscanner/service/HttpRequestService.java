package tr.com.seruvent.vulnerabilityscanner.service;

import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.util.UriComponentsBuilder;

import java.io.UnsupportedEncodingException;
import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.net.URLEncoder;

@Service
public class HttpRequestService {

    private final RestTemplate restTemplate;

    @Autowired
    public HttpRequestService(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    /**
     *
     * @param endpointUrl
     * @return
     */
    public ResponseEntity<String> sendPostRequest(String endpointUrl, HashMap<String,String> queryParams) {

        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);

        // HttpEntity create
        // HttpEntity<String> requestEntity = new HttpEntity<>(requestBody, headers);

        // POST isteği için kullanılacak veri (application/x-www-form-urlencoded)
        MultiValueMap<String, String> requestBody = new LinkedMultiValueMap<>();
        for (Map.Entry<String, String> entry : queryParams.entrySet()) {
            requestBody.add(entry.getKey(), entry.getValue());
        }


        // HttpEntity oluştur
        HttpEntity<MultiValueMap<String, String>> requestEntity = new HttpEntity<>(requestBody, headers);


        // POST request
        ResponseEntity<String> responseEntity = restTemplate.exchange(
                endpointUrl,
                HttpMethod.POST,
                requestEntity,
                String.class
        );

        // Response
        // String responseBody = responseEntity.getBody();
        // System.out.println("Response: " + responseBody);

        return responseEntity;
    }

    /**
     *
     * @param endpointUrl
     * @return
     */
    public ResponseEntity<String> sendGetRequest(String endpointUrl, HashMap<String,String> queryParams) {
        return sendGetRequest(false, endpointUrl,queryParams);
    }

    /**
     *
     * @param endpointUrl
     * @return
     */
    public ResponseEntity<String> sendGetRequest(boolean encode,String endpointUrl, HashMap<String,String> queryParams) {

        HttpHeaders headers = new HttpHeaders();
        headers.set(HttpHeaders.ACCEPT, MediaType.ALL_VALUE);
        headers.set("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36");
        HttpEntity<?> entity = new HttpEntity<>(headers);

        UriComponentsBuilder uriBuilder = UriComponentsBuilder.fromHttpUrl(endpointUrl);
        for (Map.Entry<String, String> entry : queryParams.entrySet()) {
            if(encode){
                uriBuilder.queryParam(entry.getKey(), URLEncoder.encode(entry.getValue(), StandardCharsets.UTF_8));
            }else {
                uriBuilder.queryParam(entry.getKey(), entry.getValue());
            }

        }

        String finalUrl = uriBuilder.build(false).toUriString();
        System.out.println(finalUrl);

        // TODO: Aşağıdaki istek browser'da çalışmasına rağmen neden burada çalışmıyor?
        //finalUrl = "https://kemalsami.ulakbim.gov.tr/tobb_bil501/php/unsafe_home.php?username=%28a%27+OR+%272%27%3D%272%27%3B+%23%29";

        // GET isteği yap
        ResponseEntity<String> responseEntity = restTemplate.exchange(
                finalUrl,
                HttpMethod.GET,
                entity,
                String.class
        );

        // Response
        // String responseBody = responseEntity.getBody();
        // System.out.println("Response: " + responseBody);

        return responseEntity;
    }

}
